Input
Store DivA
Input
Store DivB
JnS Divide
Load DivWynik
Output
Load DivMod
Output
Halt


DivANegFlag,		HEX		0 // Flaga znaku dzielnej
DivBNegFlag,		HEX		0 // Flaga znaku dzielnika
DivA,				HEX		0 // dzielna
DivB,				HEX		0 // dzielnik
DivWynik,			HEX		0 // wynik dzielenia
DivMod,				HEX		0 // reszta z dzielenia
Divide,				HEX		0 // wskaznik na funkcje
					// Zerujemy wynik, reszte i ilosc ujemnych liczb
                    Clear
					Store DivWynik
					Store DivMod
                    Store wynik_neg_Temp
					Store mod_neg_temp
                    Store Abs_temp
					Store DivANegFlag
					Store DivBNegFlag
                    
					// Najpierw wypelniamy flagi
                    Load DivA
                    Skipcond 000
                    Jump set_b_flag
                    
                    Load DivANegFlag
                    Add ONE
                    Store DivANegFlag
                    
set_b_flag,			Load DivB
					Skipcond 000
                    Jump Makepos
                    
                    Load DivBNegFlag
                    Add ONE
                    Store DivBNegFlag
                    
					// Zamieniamy liczby na ich modul
Makepos,			Load DivA
                    JnS Abs
                    Store DivA
                    Load DivB
                    JnS Abs
                    Store DivB
                    
While_Div,			Load DivA
					Subt DivB
                    Skipcond 000
                    Jump Do_Div
                    
                    // Zapisujemy reszte z dzielenia
                    Add DivB
                    Store DivMod
                    
                    // Robimy poprawke na znak
                    JnS Div_adjust_sign
                    JumpI Divide
                    
Do_Div,				Store DivA
					Load DivWynik
                    Add ONE
                    Store DivWynik
                    Jump While_Div

Abs_temp,			HEX		0
Abs,				HEX 	0		// Oblicza modul z liczby
					Skipcond 000
                    JumpI Abs
                    Store Abs_temp
                    Subt Abs_temp
                    Subt Abs_temp
                    JumpI Abs

Div_adjust_sign,	HEX		0		// Zmienia znak na przeciwny
					Load DivANegFlag
                    
                    // znak reszty = znak dzielnej
                    Skipcond 400
                    JnS make_mod_neg
                    
                    // znak wyniku = - (znak dzielnej xor znak dzielnika)
                    Load DivANegFlag
                    Add DivBNegFlag
                    Subt ONE
                    
                    JnS make_wynik_neg
                    
                    JumpI Div_adjust_sign
                    
wynik_neg_Temp,		DEC		0
make_wynik_neg,		HEX		0
					
                    // jesli sgn(a) + sgn(b) - 1 = 0 to chcemy zmienic na minus
                    Skipcond 400
					JumpI make_wynik_neg
                    
                    Load DivWynik
                    Store wynik_neg_Temp
                    subt wynik_neg_Temp
					subt wynik_neg_Temp
					Store DivWynik
                    
                    JumpI make_wynik_neg
                    
mod_neg_temp,		DEC		0
make_mod_neg,		HEX		0
					Load DivMod
                    Store mod_neg_temp
                    Subt mod_neg_temp
					Subt mod_neg_temp
                    Store DivMod
                    JumpI make_mod_neg
                    
                    
ONE,				DEC		1



